import streamlit as st
from utils.st_utils import st_check_session

st.set_page_config(
    page_title="Guia de Configura√ß√£o",
    layout="wide",
    page_icon="‚öôÔ∏è"
)

st_check_session()

st.header("‚öôÔ∏è Guia de Configura√ß√£o e Modos de Opera√ß√£o")
st.markdown("---")

st.info("""
    Esta aplica√ß√£o oferece flexibilidade atrav√©s de flags de configura√ß√£o no arquivo `config.py`.
    Essas flags permitem ajustar o comportamento do sistema para diferentes ambientes,
    como desenvolvimento, testes ou produ√ß√£o.
""")
st.success("""
    **Sistema de Valida√ß√£o Integrado!**
    Ao iniciar, a aplica√ß√£o verifica automaticamente (`Home.py`) se as flags em `config.py`
    formam uma combina√ß√£o l√≥gica. Combina√ß√µes inv√°lidas (ex: exigir login sem banco de dados)
    impedir√£o a inicializa√ß√£o, exibindo uma mensagem de erro clara.
""")

with st.expander("üìö 1. Detalhamento das Flags de Configura√ß√£o (`config.py`)", expanded=True):
    st.markdown("""
        Para alterar o modo de opera√ß√£o, edite o arquivo `config.py` na raiz do projeto
        e **reinicie o servidor Streamlit**.
    """)

    st.subheader("`DATABASE_ENABLED` (Boolean)")
    st.markdown("""
        * **Prop√≥sito:** Controla **toda** a comunica√ß√£o com o banco de dados.
        * **`True` (Recomendado para Produ√ß√£o/Backend Dev):** A aplica√ß√£o tentar√° se conectar ao banco de dados definido no `banco.ini`. Funcionalidades que dependem de dados (CRUDs, login real) estar√£o ativas.
        * **`False` (Modo Offline / Frontend Dev):** A aplica√ß√£o **n√£o** tentar√° estabelecer conex√£o com o banco. √ötil para desenvolver a interface gr√°fica (UI) sem depender de um banco ativo. P√°ginas que requerem dados exibir√£o um aviso.
    """)

    st.subheader("`USE_LOGIN` (Boolean)")
    st.markdown("""
        * **Prop√≥sito:** Habilita ou desabilita a tela/sistema de autentica√ß√£o de usu√°rios.
        * **`True` (Recomendado para Produ√ß√£o):** Exige que o usu√°rio fa√ßa login atrav√©s da tela inicial (`Home.py`). As permiss√µes de acesso definidas no banco de dados (`check_access`) ser√£o aplicadas. **Requer `DATABASE_ENABLED = True`**.
        * **`False` (Modo de Desenvolvimento R√°pido):** Pula completamente a tela de login. Um usu√°rio *mock* (simulado) com permiss√µes de Administrador Global √© criado automaticamente na sess√£o. Ideal para testar rapidamente funcionalidades internas sem precisar logar repetidamente.
    """)

    st.subheader("`INITIALIZE_DATABASE_ON_STARTUP` (Boolean)")
    st.markdown("""
        * **Prop√≥sito:** Controla a cria√ß√£o/inicializa√ß√£o autom√°tica do schema do banco de dados **apenas para SQLite**.
        * **`True` (√ötil para Setup Inicial/Testes Locais):** Se o arquivo do banco de dados SQLite (definido em `banco.ini`) n√£o existir ou estiver vazio, a aplica√ß√£o tentar√° cri√°-lo e executar o script `persistencia/sql_schema_SQLLite.sql` para definir as tabelas e inserir dados iniciais. **Requer `DATABASE_ENABLED = True`**. *Cuidado: N√£o use `True` em produ√ß√£o com um banco j√° existente!*
        * **`False` (Padr√£o Seguro / Produ√ß√£o):** A aplica√ß√£o assume que o banco de dados (SQLite ou outro) j√° existe e est√° corretamente configurado. Essencial para ambientes de produ√ß√£o ou quando o banco √© gerenciado externamente.
    """)

    st.subheader("`REDIRECT_CONSOLE_TO_LOG` (Boolean)")
    st.markdown("""
        * **Prop√≥sito:** Define para onde as sa√≠das padr√£o do console (`print`, erros, logs de bibliotecas) ser√£o direcionadas.
        * **`True` (Recomendado para Produ√ß√£o/Debugging Centralizado):** Todas as sa√≠das do console s√£o redirecionadas para os arquivos de log rotativos na pasta `logs/` (`app.log`, `login.log`). Isso centraliza o rastreamento e evita poluir o terminal onde o Streamlit foi iniciado.
        * **`False` (√ötil para Debugging R√°pido):** As sa√≠das (`print`, `logging`, erros) aparecem diretamente no terminal onde voc√™ executou `streamlit run Home.py`. Facilita a visualiza√ß√£o imediata durante o desenvolvimento ativo.
    """)

st.header("üí° 2. Cen√°rios Comuns e Combina√ß√µes de Flags")
st.markdown("""
    A combina√ß√£o correta das flags permite adaptar a aplica√ß√£o √†s suas necessidades.
    Veja os cen√°rios v√°lidos e como as flags interagem:
""")

st.subheader("‚úÖ Cen√°rios V√°lidos e Recomendados")

with st.container(border=True):
    st.markdown("#### üåé Modo Produ√ß√£o / Demonstra√ß√£o Real")
    st.markdown(
        "Configura√ß√£o ideal para o ambiente final ou para demonstrar o sistema completo com seguran√ßa e dados persistentes.")
    st.code("""
DATABASE_ENABLED = True
USE_LOGIN = True
INITIALIZE_DATABASE_ON_STARTUP = False  # Assume que o BD j√° existe
REDIRECT_CONSOLE_TO_LOG = True        # Centraliza logs em arquivos
    """, language="python")
    st.markdown(
        "**Comportamento:** Exige login, conecta ao banco de dados configurado (`banco.ini`), aplica permiss√µes de acesso e registra atividades em arquivos de log. M√°xima seguran√ßa e funcionalidade.")

with st.container(border=True):
    st.markdown("#### üõ†Ô∏è Modo Desenvolvimento Back-end (Com Banco)")
    st.markdown(
        "Ideal para desenvolvedores trabalhando na l√≥gica de acesso a dados, servi√ßos ou regras de neg√≥cio, permitindo testes r√°pidos sem a barreira do login.")
    st.code("""
DATABASE_ENABLED = True
USE_LOGIN = False                       # Pula o login, usa usu√°rio mock Admin
INITIALIZE_DATABASE_ON_STARTUP = True   # √ötil com SQLite para resetar o BD facilmente
REDIRECT_CONSOLE_TO_LOG = False       # V√™ logs/prints direto no terminal
    """, language="python")
    st.markdown(
        "**Comportamento:** Conecta ao banco e permite usar todas as funcionalidades de dados, mas sem a necessidade de autentica√ß√£o. `INITIALIZE_DATABASE_ON_STARTUP = True` (com SQLite) permite recriar um ambiente limpo a cada rein√≠cio, √≥timo para testes.")

with st.container(border=True):
    st.markdown("#### üé® Modo Desenvolvimento Front-end (Offline)")
    st.markdown(
        "Perfeito para focar no design visual e na experi√™ncia do usu√°rio (UI/UX) sem depender de um banco de dados ativo ou conex√£o de rede.")
    st.code("""
DATABASE_ENABLED = False              # Desativa completamente o banco
USE_LOGIN = False                     # Pula o login
INITIALIZE_DATABASE_ON_STARTUP = False  # Obrigat√≥rio ser False se DB est√° desativado
REDIRECT_CONSOLE_TO_LOG = False       # V√™ prints/erros de UI no terminal
    """, language="python")
    st.markdown(
        "**Comportamento:** A aplica√ß√£o funciona sem banco de dados. O login √© pulado. P√°ginas que dependem de dados exibir√£o um aviso de 'Funcionalidade Indispon√≠vel', mas a navega√ß√£o entre p√°ginas e a intera√ß√£o com widgets visuais funcionar√£o normally.")

st.subheader("‚ùå Cen√°rios Inv√°lidos (Bloqueados Automaticamente)")
st.markdown("""
    As combina√ß√µes a seguir s√£o il√≥gicas e **ser√£o bloqueadas** pelo validador
    no `Home.py` ao iniciar a aplica√ß√£o. Uma mensagem de erro espec√≠fica ser√° exibida.
""")

with st.container(border=True):
    st.error("#### Inv√°lido 1: Exigir Login Sem Banco de Dados")
    st.code("""
DATABASE_ENABLED = False
USE_LOGIN = True
# ... (outras flags)
    """, language="python")
    st.markdown(
        "**Motivo:** Imposs√≠vel verificar credenciais de usu√°rio (`USE_LOGIN = True`) sem acesso ao banco onde elas est√£o armazenadas (`DATABASE_ENABLED = False`).")

with st.container(border=True):
    st.error("#### Inv√°lido 2: Inicializar Banco de Dados Desativado")
    st.code("""
DATABASE_ENABLED = False
INITIALIZE_DATABASE_ON_STARTUP = True
# ... (outras flags)
    """, language="python")
    st.markdown(
        "**Motivo:** N√£o faz sentido tentar criar tabelas (`INITIALIZE_DATABASE_ON_STARTUP = True`) se a conex√£o com o banco de dados est√° completamente desabilitada (`DATABASE_ENABLED = False`).")

st.markdown("---")
st.caption("Consulte este guia para configurar o ambiente ideal para sua necessidade.")