import streamlit as st
from utils.st_utils import st_check_session

st.set_page_config(
    page_title="Sobre o Sistema",
    layout="centered",
    page_icon="üöÄ"
)

st_check_session()

st.markdown("# üöÄ Sobre Este Sistema: Arquitetura e Prop√≥sito")
st.markdown("---")

st.info("""
    **Sistema de Demonstra√ß√£o - Vers√£o 2.1 (Streamlit Simplificado)**

    Esta aplica√ß√£o representa a moderniza√ß√£o de um sistema originalmente constru√≠do
    com Tkinter/ttkbootstrap. O objetivo principal foi migrar para uma interface
    web interativa usando **Streamlit**, preservando um back-end de dados robusto.

    *(Esta vers√£o foi **recentemente refatorada** para simplificar a arquitetura,
    removendo as classes de Controller/View em favor de scripts de p√°gina √∫nicos
    para fins did√°ticos.)*
""")

st.subheader("üèóÔ∏è Arquitetura Simplificada (Foco Did√°tico)")
st.markdown("""
    A arquitetura original (baseada em Model-View-Controller) foi simplificada.
    Agora, cada funcionalidade (como "Gest√£o de Gatos" ou "Gest√£o de Usu√°rios")
    √© um **arquivo Python √∫nico e independente** localizado na pasta `pages/`.

    Esta abordagem torna o c√≥digo mais f√°cil de entender para quem est√° come√ßando:
    * **Sem Classes Complexas:** A l√≥gica de UI e os *callbacks* (fun√ß√µes de bot√µes)
        s√£o gerenciados por fun√ß√µes simples.
    * **Tudo em um S√≥ Lugar:** Voc√™ pode ler o arquivo da p√°gina de cima a baixo
        para entender tudo o que ela faz (veja o `2_üìã_Painel_Modelo.py`).
    * **Reutiliza√ß√£o do Back-end:** O acesso ao banco de dados ainda √© centralizado,
        permitindo que a l√≥gica de neg√≥cios permane√ßa limpa.

    **Componentes Chave do Back-end (Preservados):**
    * **Camada de Persist√™ncia (`persistencia/`):**
        * Utiliza `SQLAlchemy Core` para comunica√ß√£o eficiente e padronizada com o banco de dados.
        * Inclui um **Reposit√≥rio Gen√©rico** (`repository.py`) que abstrai as opera√ß√µes CRUD (Criar, Ler, Atualizar, Deletar), tornando os scripts de p√°gina independentes dos detalhes do SQL.
        * Gerencia a conex√£o (`database.py`) de forma centralizada, lendo a configura√ß√£o ativa do `banco.ini`.
        * Implementa seguran√ßa (`security.py`, `auth.py`) com criptografia para credenciais no `.ini` e hashing `bcrypt` para senhas de usu√°rio no banco.
    * **Compatibilidade Multi-Banco:**
        * Gra√ßas ao `GenericRepository`, o sistema suporta nativamente **SQLite, PostgreSQL, MySQL/MariaDB e SQL Server**, bastando configurar o `banco.ini`.
""")

st.subheader("üñ•Ô∏è Interface com Streamlit")
st.markdown("""
    A interface √© constru√≠da utilizando os componentes nativos do Streamlit:
    * A navega√ß√£o √© gerenciada pelo sistema de `pages/` do Streamlit,
        proporcionando uma navega√ß√£o fluida pela **barra lateral esquerda**.
    * Cada arquivo na pasta `pages/` (como `3_üê±_Gatos_CRUD.py`)
        corresponde a uma funcionalidade do sistema.
    * A interatividade √© gerenciada pelo ciclo de execu√ß√£o do Streamlit,
        com o estado sendo mantido atrav√©s do `st.session_state`.
""")

st.markdown("---")
st.caption("Desenvolvido como demonstra√ß√£o de arquitetura de software e migra√ß√£o de UI.")